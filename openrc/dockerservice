#!/sbin/openrc-run

# see https://github.com/0x17de/dockerservice-openrc

# MIT License
# 
# Copyright (c) 2019 Manuel Herrmann
#
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

: ${SUBCFGDIR:=/root/docker}
DOCKER_COMPOSE_UP_ARGS=${DOCKER_COMPOSE_UP_ARGS-"--no-build --no-recreate --no-deps"}

SUBSVC="${SVCNAME#*.}"
[ -z "${SUBSVC}" ] && exit 1
: ${SUBCFG:="${SUBCFGDIR}/${SUBSVC}/docker-compose.yml"}
DOCOCMD="/usr/bin/docker-compose"
export COMPOSE_HTTP_TIMEOUT=300

description="Manage docker services defined in ${SUBCFG}"
extra_commands="configtest build"
description_configtest="Check configuration via \"docker-compose -f ${SUBCFG} config\""
description_build="Run \"docker-compose -f ${SUBCFG} build\""

depend() {
  need localmount net docker
  use dns
  after docker
}

configtest() {
  if ! [ -f "${SUBCFG}" ]; then
    eerror "The config file ${SUBCFG} does not exist!"
    return 1
  fi
  if "${DOCOCMD}" -f "${SUBCFG}" config >&/dev/null; then
    einfo "config: ok"
  else
    eerror "config: error"
    return 1
  fi
}

build() {
  configtest || return 1
  ebegin "Building dockerservice ${SUBSVC}"
  "${DOCOCMD}" -f "${SUBCFG}" build
  eend $?
}

start() {
  configtest || return 1
  ebegin "Starting dockerservice ${SUBSVC}"
  "${DOCOCMD}" -f "${SUBCFG}" up -d ${DOCKER_COMPOSE_UP_ARGS}
  eend $?
}

stop() {
  ebegin "Stopping dockerservice ${SUBSVC}"
  "${DOCOCMD}" -f "${SUBCFG}" stop --timeout=300
  eend $?
}

status() {
  if [ "$("${DOCOCMD}" -f "${SUBCFG}" top | wc -l)" -gt "0" ]; then
    einfo "status: started"
  else
    einfo "status: stopped"
    return 3
  fi
}
